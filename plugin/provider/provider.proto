syntax = "proto3";

option go_package = "github.com/gofunct/mamba/plugin/provider";
option go_package = "mamba/plugin/provider";
import "google/protobuf/empty.proto";
import "github.com/gofunct/mamba/common/common.proto";

package provider;


service Provider {
    //////// Information about what a provider supports/expects
    rpc GetSchema(common.GetProviderSchema.Request) returns (common.GetProviderSchema.Response);
    rpc PrepareProviderConfig(common.PrepareProviderConfig.Request) returns (common.PrepareProviderConfig.Response);
    rpc ValidateResourceTypeConfig(common.ValidateResourceTypeConfig.Request) returns (common.ValidateResourceTypeConfig.Response);
    rpc ValidateDataSourceConfig(common.ValidateDataSourceConfig.Request) returns (common.ValidateDataSourceConfig.Response);
    rpc UpgradeResourceState(common.UpgradeResourceState.Request) returns (common.UpgradeResourceState.Response);

    //////// One-time initialization, called before other functions below
    rpc Configure(common.Configure.Request) returns (common.Configure.Response);

    //////// Managed Resource Lifecycle
    rpc ReadResource(common.ReadResource.Request) returns (common.ReadResource.Response);
    rpc PlanResourceChange(common.PlanResourceChange.Request) returns (common.PlanResourceChange.Response);
    rpc ApplyResourceChange(common.ApplyResourceChange.Request) returns (common.ApplyResourceChange.Response);
    rpc ImportResourceState(common.ImportResourceState.Request) returns (common.ImportResourceState.Response);

    rpc ReadDataSource(common.ReadDataSource.Request) returns (common.ReadDataSource.Response);

    //////// Graceful Shutdown
    rpc Stop(common.Stop.Request) returns (common.Stop.Response);
}
